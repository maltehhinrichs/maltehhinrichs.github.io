name: Weekly Presentations Extraction
on:
  schedule:
    - cron: '0 6 * * 1' # Every Monday at 06:00 UTC
  workflow_dispatch:
jobs:
  update-presentations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          pip install requests
      - name: Extract presentations
        run: python assets/python/extract_presentations.py
      - name: Generate presentation map
        run: |
          if [ -f "_pages/presentations.md" ]; then
            # Copy presentations.md to root for the script
            cp _pages/presentations.md presentations.md
            # Run the map generation script
            python presentations_map.py
            # Clean up the temporary file
            rm presentations.md
          else
            echo "presentations.md not found in _pages/, skipping map generation"
          fi
      - name: Update presentations.md with map
        run: |
          # Check if presentations.md exists and update it to include the map
          if [ -f "_pages/presentations.md" ]; then
            # Create a backup
            cp _pages/presentations.md _pages/presentations.md.bak
            
            # Check if the iframe is already present
            if ! grep -q 'iframe.*talkmap' _pages/presentations.md; then
              # Create updated presentations.md with map
              cat > _pages/presentations.md << 'EOF'
          ---
          layout: archive
          title: "Presentations"
          permalink: /presentations/
          author_profile: true
          ---
          
          ## Presentation Locations
          
          <iframe src="/talkmap/map.html" height="700" width="100%" style="border:none;"></iframe>
          
          ## Presentations
          
          EOF
              # Append the presentations list (skip the header section)
              sed -n '/^## /,$p' _pages/presentations.md.bak | tail -n +2 >> _pages/presentations.md || \
              sed -n '/^- \*\*/,$p' _pages/presentations.md.bak >> _pages/presentations.md
              
              echo "✓ Updated presentations.md with map iframe"
            else
              echo "✓ Map iframe already present in presentations.md"
            fi
            
            # Clean up backup
            rm _pages/presentations.md.bak
          fi
      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add _pages/presentations.md talkmap/ || echo "No presentation changes to commit"
          git diff-index --quiet HEAD || git commit -m "Automated update of presentations list and map"
          git push https://$CV_ACCESS_TOKEN@github.com/maltehhinrichs/maltehhinrichs.github.io.git HEAD:${GITHUB_REF_NAME}
        env:
          CV_ACCESS_TOKEN: ${{ secrets.CV_ACCESS_TOKEN }}
